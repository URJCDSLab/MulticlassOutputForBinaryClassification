---
title: "Pima dataset results"
author: "DSLAB"
format: html
editor: visual
---

```{r}
source('../GeneralAndMethodFunctions.R')

library(plyr)
library(dplyr)
library(ggplot2)
library(readr)
library(tidyr)
library(caret)
library(e1071)
library(CORElearn)
```

```{r}
df <- read.csv("../datasets/pima.csv")

df$class = ifelse(df$class=="tested_negative", 0, 1)
df=df %>% mutate_if(is.character, as.factor)
str(df)
df$class <- as.factor(df$class)
df[,-9] <- scale(df[,-9])

set.seed(5989)
trainIndex <- createDataPartition(df$class,
                                  p = 0.7, # training contains 70% of data
                                  list = FALSE)

dfTrain <- df[ trainIndex,]
dfTest  <- df[-trainIndex,]

kernelSVM = 'radial'



### Mejor coste
svm_cv <- tune("svm", class ~ ., data = dfTrain,
               kernel = kernelSVM, scale=TRUE,
               ranges = list(cost = c(0.001, 0.01, 0.1, 1, 5, 10, 20, 50, 100,
                                      150, 200)))
summary(svm_cv)
best_cost=svm_cv$best.model$cost 


df_test_no_target <- dfTest[, setdiff(names(df), "class")]
df_train_no_target <- dfTrain[, setdiff(names(df), "class")]
model_svm_Pima = svm(class ~ ., data=dfTrain, kernel="radial", scale=FALSE, probability=TRUE, type="C", cost=best_cost)
pred_svm_train = predict(model_svm_Pima, df_train_no_target, probability=TRUE, decision.values = TRUE)
probs_model_train <- attr(pred_svm_train,"probabilities")
probs_model_train <- probs_model_train[,c("0", "1")]
probs_model_train_class1 <- probs_model_train[,'1']

# test
pred_svm_test = predict(model_svm_Pima, df_test_no_target, probability=TRUE, decision.values = TRUE)
probs_model_test <- attr(pred_svm_test,"probabilities")
probs_model_test <- probs_model_test[,c("0", "1")]
probs_model_test_class1 <- probs_model_test[,'1']

```

# Fixed thresholds: 1/2, 1/3-2/3, 1/4-2/4-3/4

## Classic cut: 1/2

```{r warning=FALSE, message=FALSE}
ths = c(1/2)
GPS_p_values = c('p_11','p12','r1_1','r21')
results_binary_train <- Case_FixedThreshold(dfTrain, probs_model_train_class1, ths, GPS_p_values)
print(results_binary_train)
```

```{r warning=FALSE, message=FALSE}
list_names_obs <- c('Low','High')
list_names_pred <- c('Low','High')
graph_train_bin <- barplot_CM(results_binary_train$CM,list_names_obs,list_names_pred)
graph_train_bin
#ggsave("Pima_2x2_train.png", plot = graph_train_bin, width = 6, height = 4, dpi = 300)

```

In the test set:

```{r warning=FALSE, message=FALSE}
ths = c(1/2)
GPS_p_values = c('p_11','p12','r1_1','r21')
results_binary_test <- Case_FixedThreshold(dfTest, probs_model_test_class1, ths, GPS_p_values)
print(results_binary_test)
```

```{r warning=FALSE, message=FALSE}
list_names_obs <- c('Low','High')
list_names_pred <- c('Low','High')
graph_test_bin <- barplot_CM(results_binary_test$CM,list_names_obs,list_names_pred)
graph_test_bin
#ggsave("Pima_2x2_test.png", plot = graph_test_bin, width = 6, height = 4, dpi = 300)

```


## 4 cuts: 1/5-2/5-3/5-4/5

```{r warning=FALSE, message=FALSE}
ths = c(1/5,2/5,3/5,4/5)
GPS_p_values = c('p_11','p15','r1_1','r51')
results_five_train <- Case_FixedThreshold(dfTrain, probs_model_train_class1, ths, GPS_p_values)
print(results_five_train)
```

```{r warning=FALSE, message=FALSE}
list_names_obs <- c('Low','High')
list_names_pred <- c('Very low','Low','Medium','High','Very high')
graph_train_five <- barplot_CM(results_five_train$CM,list_names_obs,list_names_pred)
graph_train_five
#ggsave("Pima_5x2_train.png", plot = graph_train_five, width = 6, height = 4, dpi = 300)

```

In the test set:

```{r warning=FALSE, message=FALSE}
ths = c(1/5,2/5,3/5,4/5)
GPS_p_values = c('p_11','p15','r1_1','r51')
results_five_test <- Case_FixedThreshold(dfTest, probs_model_test_class1, ths, GPS_p_values)
print(results_five_test)
```

```{r warning=FALSE, message=FALSE}
list_names_obs <- c('Low','High')
list_names_pred <- c('Very low','Low','Medium','High','Very high')
graph_test_five <- barplot_CM(results_five_test$CM,list_names_obs,list_names_pred)
graph_test_five
#ggsave("Pima_5x2_test.png", plot = graph_test_five, width = 6, height = 4, dpi = 300)

```

# Case 5x2

## isotonic

```{r}

class_train <- dfTrain$class
class_test <- dfTest$class

probs_train <- probs_model_train
probs_test <- probs_model_test

class_prin <- 2
calibration_model <- calibrate(class_train, probs_train[,class_prin], class1=class_prin, 
                               method="isoReg",assumeProbabilities=TRUE)

# apply the calibration to the testing set
calibratedProbs <- applyCalibration(probs_test[,class_prin], calibration_model)


ths = c(1/5,2/5,3/5,4/5)
GPS_p_values = c('p_11','p15','r1_1','r51')
results_iso5 <- Case_FixedThreshold(dfTest, calibratedProbs, ths, GPS_p_values)
results_iso5

```

```{r message=FALSE}
list_names_obs <- c('Low','High')
list_names_pred <- c('Very low','Low','Medium','High','Very high')
graph_bar_plot_iso5 <- barplot_CM(results_iso5$CM,list_names_obs,list_names_pred)
graph_bar_plot_iso5
#ggsave("Pima_MaxGPS_IsoReg_test5.png", plot = graph_bar_plot_iso5, width = 6, height = 4, dpi = 300)
```

## Max GPS(p_11,p15) without constraints

```{r warning=FALSE, message=FALSE}

restriction = FALSE
num_cuts = 4
vector_GPS =   c('p15', 'p_11') 
user_condition <- NULL
results_2cuts_MaxGPS_class_train <- AfterTheModel(dfTrain, probs_model_train,restriction,user_condition,vector_GPS,num_cuts)
print(results_2cuts_MaxGPS_class_train)
ths_for_test <- results_2cuts_MaxGPS_class_train$thresholds


```

```{r}

list_names_obs <- c('Low','High')
list_names_pred <- c('Very low','Low','Medium','High','Very high')
graph_2cuts_MaxGPS_class_train <- barplot_CM(results_2cuts_MaxGPS_class_train$best_CM,list_names_obs,list_names_pred)
graph_2cuts_MaxGPS_class_train
#ggsave("Pima_MaxGPS_class_NoRestrictions_train.png", plot = graph_2cuts_MaxGPS_class_train, width = 6, height = 4, dpi = 300)

```

```{r}

probs_test_class1 <- probs_model_test[,'1'] 
thresholds <- sort(ths_for_test, decreasing=TRUE)
breaks <- c(Inf, thresholds, -Inf)
Y_pred_class_test <- cut(probs_test_class1, breaks = breaks, labels = 0:length(thresholds), right = FALSE)

CM_test <- table(Class_predicted = Y_pred_class_test,Class_observed = dfTest$class)
print(CM_test)

vector_GPS = c('p15', 'p_11')  #c('p_11','p15','r1_1','r51')
gps_test <- GPS_from_CM(CM_test,vector_GPS)
print(gps_test)



```

```{r}
graph_2cuts_MaxGPS_class_test <- barplot_CM(CM_test,list_names_obs,list_names_pred)
graph_2cuts_MaxGPS_class_test
#ggsave("Pima_MaxGPS_class_NoRestrictions_test.png", plot = graph_2cuts_MaxGPS_class_test, width = 6, height = 4, dpi = 300)

```

## Max GPS with restrictions: case 5x2

```{r warning=FALSE, message=FALSE}
## Figure g
restriction = TRUE
user_condition <- function(p, p_, r, r_) {
  (r_[1]>0.3) & (p[4]>0.7) & (p[3]>0.4) & (p[5]>0.9)
}

num_cuts = 4
vector_GPS = c('p15', 'p_11') 
results_restric_four_train <- AfterTheModel(dfTrain, probs_model_train,restriction,user_condition,vector_GPS,num_cuts)
print(results_restric_four_train)
ths_for_test <- results_restric_four_train$thresholds
```

```{r warning=FALSE, message=FALSE}
list_names_obs <- c('Low','High')
list_names_pred <- c('Very low','Low','Medium','High','Very high')
graph_restric_four_train <- barplot_CM(results_restric_four_train$best_CM,list_names_obs,list_names_pred)
graph_restric_four_train
#ggsave("Pima_MaxGPS_Restrictions_four_train.png", plot = graph_restric_four_train, width = 6, height = 4, dpi = 300)

```

```{r}
probs_test_class1 <- probs_model_test[,'1'] 
thresholds <- sort(ths_for_test, decreasing=TRUE)
breaks <- c(Inf, thresholds, -Inf)
Y_pred_class_test <- cut(probs_test_class1, breaks = breaks, labels = 0:length(thresholds), right = FALSE)

CM_test <- table(Class_predicted = Y_pred_class_test,Class_observed = dfTest$class)
print(CM_test)

vector_GPS = c('p15', 'p_11')
gps_test <- GPS_from_CM(CM_test,vector_GPS)
print(gps_test)

```

```{r}
graph_restric_four_test <- barplot_CM(CM_test,list_names_obs,list_names_pred)
graph_restric_four_test
#ggsave("Pima_MaxGPS_Restrictions_four_test.png", plot = graph_restric_four_test, width = 6, height = 4, dpi = 300)

```

## In the model Case 5x2

```{r}

user_condition <- function(p, p_, r, r_) {
  conditions <- list(
   list(value = r_[1], threshold = 0.3, op = ">"),
   list(value = p[4], threshold = 0.7, op = ">"),
   list(value = p[5], threshold = 0.9, op = ">"),
   list(value = p[3], threshold = 0.4, op = ">")
  )
  
  results <- lapply(conditions, function(cond) {
    if (cond$op == "<") return(cond$value < cond$threshold)
    if (cond$op == ">") return(cond$value > cond$threshold)
    if (cond$op == "<=") return(cond$value <= cond$threshold)
    if (cond$op == ">=") return(cond$value >= cond$threshold)
  })
  
  all_true = all(unlist(results))
  if (all_true){
    total_cond = TRUE
  } else{
    total_cond = FALSE
  }
  
  return(list(conditions = conditions, results = results,total_cond=total_cond))
}
```

```{r}
kernelSVM = 'radial'
num_cuts = 4
vector_GPS = c('p15', 'p_11')
cv_folds = 2
restriction = TRUE

results_In_train_five <- InTheModel(dfTrain,kernelSVM,num_cuts,cv_folds,vector_GPS,restriction,user_condition)
results_In_train_five

```

```{r}
model_in <- results_In_train_five$best_model_trained
probs_train_in <- predict(model_in,df_train_no_target, probability=TRUE, decision.values = TRUE)
probs_test_in <- predict(model_in,df_test_no_target, probability=TRUE, decision.values = TRUE)

probs_model_train_in <- attr(probs_test_in,"probabilities")
probs_model_train_in <- probs_model_train_in[,c("0", "1")]
probs_model_train_class1_in <- probs_model_train_in[,2]

probs_model_test_in <- attr(probs_test_in,"probabilities")
probs_model_test_in <- probs_model_test_in[,c("0", "1")]
probs_model_test_class1_in <- probs_model_test_in[,2]
```

```{r}
# Test
ths_in = results_In_train_five$thresholds
breaks <- c(Inf, ths_in, -Inf)
Y_pred_class <- cut(probs_model_test_class1_in, breaks = breaks, labels = 0:length(ths_in), right = FALSE)
unique_values <- unique(Y_pred_class) 
Y_pred_class <- factor(Y_pred_class, levels = sort(unique_values))
CM <- table(Class_predicted = Y_pred_class,Class_observed = dfTest$class)
CM
vector_GPS = c('p15', 'p_11') 
GPS_from_CM(CM,vector_GPS)
```

```{r warning=FALSE, message=FALSE}
list_names_obs <- c('Low','High')
list_names_pred <- c('Very low','Low','Medium','High','Very high')
graph_in_five_1 <- barplot_CM(CM,list_names_obs,list_names_pred)
graph_in_five_1
#ggsave("Pima_InTheModel_test_five.png", plot = graph_in_five_1, width = 6, height = 4, dpi = 300)

```

```{r warning=FALSE, message=FALSE}
list_names_obs <- c('Low','High')
list_names_pred <- c('Very low','Low','Medium','High','Very high')
graph_in_testCV <- barplot_CM(results_In_train_five$best_CM_test,list_names_obs,list_names_pred)
graph_in_testCV
#ggsave("Pima_InTheModel_test_five_CV.png", plot = graph_in_testCV, width = 6, height = 4, dpi = 300)

```

